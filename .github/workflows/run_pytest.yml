name: Run Unit Test via Pytest

on:
  pull_request:
    branches:
      - main
      - dev
      - 'release/*'
      
permissions:
  contents: read
  pull-requests: write  
  checks: write        

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
        continue-on-error: true
        
      - name: Install Elysia
        run: |
          pip install ".[dev]"
        continue-on-error: true
        
      - name: Test with pytest
        id: pytest
        run: |
          pytest --ignore=tests/requires_env --tb=short -v --junitxml=pytest-results.xml
        continue-on-error: true
        
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            pytest-results.xml
          check_name: "Pytest Results"
          comment_title: "Unit Test Results"
          comment_mode: create new
          
      - name: Comment PR (Custom)
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const fs = require('fs');
            
            // Read pytest exit code from previous step
            const testsPassed = '${{ steps.pytest.outcome }}' === 'success';
            
            let comment = '## üß™ Test Results\n\n';
            
            if (testsPassed) {
              comment += '‚úÖ **All tests passed!**\n\n';
              comment += 'üéâ Great job! Your changes look good to go.';
            } else {
              comment += '‚ùå **Some tests failed**\n\n';
              comment += 'Please check the test output above and fix any failing tests.';
            }
            
            comment += `\n\n---\n*Workflow run: [${context.runId}](${context.payload.repository.html_url}/actions/runs/${context.runId})*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Fail job if tests failed
        if: steps.pytest.outcome == 'failure'
<<<<<<< HEAD
        run: exit 1
=======
        run: exit 1
>>>>>>> 6ed3351cb80e480cd92358fcc550d96f26e35cec
